@using FoolOfRESTWeb.Models.ApiModels;
@model FoolOfRESTWeb.Models.ApiModels.ChatApiModel
@{
    ViewData["Title"] = "Chat Data";
    if (@Model == null){
        throw new NullReferenceException("Chat model cannot be null on page");
    }
}

<body class="grid bg-gray-800">
<div class="grid grid-flow-rows grid-cols-1 w-11/12 border-4 border-gray-400 rounded-xl place-self-center mt-10">
    <div class="grid grid-flow-col grid-rows-1 bg-gradient-to-r from-gray-900 from-0% via-indigo-900 via-25% to-gray-900 to-100%  w-auto object-left m-2 p-2 rounded-xl " class="items-center">
        <p class="px-2 font-bold text-gray-300">@Model.Name</p>
        <p class="px-2 place-self-end font-bold text-gray-300">ID:@Model.Id</p>
    </div>
    <div class="grid grid-flow-row grid-cols-1">
    <div class="bg-gray-900 rounded-xl m-2 *:m-2 p-2">
    @{
        if (@Model.Messages == null) return;
        foreach (MessageApiModel message in @Model.Messages){
            <div class="border-1 border-gray-400 relative h-auto grid place-self-start w-auto p-2 *:p-1 bg-gradient-to-r from-gray-900 to-indigo-950 to-75% rounded-xl">
            <a class="pl-1 text-gray-300 font-bold text-wrap hover:opacity-80" asp-controller="Telegram" asp-action="UserData" asp-route-id="@message.User.Id" >
            @message.User.Username
            </a>
            <p class="whitespace-pre-line pl-1 text-gray-300 text-wrap">@message.Text</p>
            <p class="absolute bottom-0 right-0 text-gray-400 text-[10px] ">@message.Date.ToString()</p>
            </div>
        }
    }
</div>
    </div>
</div>
</body>
